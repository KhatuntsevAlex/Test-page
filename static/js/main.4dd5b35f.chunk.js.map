{"version":3,"sources":["components/OrdersInfoCard/OrdersBar/OrdersBar.module.css","App.module.css","components/common/TotalStatistics/TotalStatistics.module.css","components/OrdersInfoCard/OrdersInfoCard.module.css","components/Transactions/TransactionsContainer.module.css","components/common/StyledSpan/StyledSpan.module.css","components/TotalInfoCard/TotalInfoCard.module.css","components/common/CardHeader/CardHeader.module.css","components/common/CardContent/CardContent.module.css","components/common/Card/Card.module.css","components/OrdersInfoCard/OrdersBar/Progress/Progress.module.css","components/common/IconGroup/IconGroup.module.css","components/common/StyledTable/StyledTable.module.css","components/UserProjectList/UserProject.module.css","api/index.js","redux/reducers/transactions.js","redux/reducers/index.js","redux/store.js","components/common/CardHeader/CardHeader.jsx","components/common/CardContent/CardContent.jsx","components/common/TotalStatistics/TotalStatistics.jsx","components/common/Card/Card.jsx","components/common/StyledSpan/StyledSpan.jsx","components/TotalInfoCard/TotalInfoCard.jsx","components/TotalInfoCard/TotalInfoCardList.jsx","assets/icons/index.js","components/OrdersInfoCard/OrdersBar/Progress/Progress.jsx","components/OrdersInfoCard/OrdersBar/OrdersBar.jsx","components/OrdersInfoCard/OrdersBar/OrdersBarList.jsx","components/OrdersInfoCard/OrdersInfoCard.jsx","components/Messages/Message.jsx","components/common/IconGroup/IconGroup.jsx","components/Messages/MessagesContainer.jsx","components/common/StyledTable/StyledTable.jsx","components/UserProjectList/UserProject.jsx","components/UserProjectList/UserProjectList.jsx","components/TodoList/Todo.jsx","components/TodoList/TodoList.jsx","components/Transactions/Transaction.jsx","components/Transactions/TransactionsTable.jsx","components/Transactions/Map.jsx","components/Transactions/TransactionsContainer.jsx","App.js","serviceWorker.js","index.js","components/Messages/Messages.module.css","components/TodoList/TodoList.module.css"],"names":["module","exports","instance","axios","baseURL","API","getItems","get","initialState","isReady","items","transactions","state","action","type","setIsReady","combineReducers","store","createStore","rootReducer","applyMiddleware","thunk","CardHeader","title","children","className","style","cardHeader","CardContent","flex","cardContent","TotalStatistics","total","name","color","percentage","icon","details","Card","card","StyledSpan","cursor","initial","wrapper","TotalInfoCard","period","totalName","data-area","TotalInfoCardList","thunder","up","down","close","settings","collapse","expand","envelope","clock","useState","map","item","Progress","value","progress","max","OrdersBar","OrdersBarList","ordersBarGroup","OrdersInfoCard","buttonsGroup","graph","Message","author","visitDate","text","messageDate","message","IconGroup","MessagesContainer","messages","messagesInfo","StyledTable","headers","header","UserProject","status","date","user","UserProjectList","userProjectList","Todo","id","todo","expires","checkbox","for","TodoList","todos","Transaction","num","transaction","amount","TransactionsTable","am4core","am4themes_material","am4themes_animated","Map","props","bubble","green","grey","chart","am4maps","zoomControl","geodata","am4geodata_worldLow","projection","Miller","polygonSeries","series","push","exclude","useGeodata","polygonTemplate","mapPolygons","template","fill","this","data","tooltipText","propertyFields","states","create","properties","imageSeries","createCustomMarker","image","dataItem","component","holder","document","createElement","dataContext","position","undefined","url","onclick","window","location","href","dot","appendChild","pulse","svgContainer","htmlElement","mapImages","longitude","latitude","events","on","each","dummyData","externalElement","xy","geoPointToSVG","top","y","left","x","dispose","width","height","Component","connect","dispatch","a","error","getTransactions","useEffect","tableWrapper","loading","App","else","Boolean","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.4dd5b35f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"OrdersBar_wrapper__3_MyC\",\"ordersBarGroup\":\"OrdersBar_ordersBarGroup__12TdD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__3BU9_\",\"else\":\"App_else__2J8Nd\",\"settings\":\"App_settings__2uoda\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"percentage\":\"TotalStatistics_percentage__1tVLh\",\"details\":\"TotalStatistics_details__1yOcv\",\"total\":\"TotalStatistics_total__3s_Vn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"OrdersInfoCard_wrapper__3iaIK\",\"graph\":\"OrdersInfoCard_graph__r4Y3y\",\"buttonsGroup\":\"OrdersInfoCard_buttonsGroup__1B_Qk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"TransactionsContainer_wrapper__29XSB\",\"tableWrapper\":\"TransactionsContainer_tableWrapper__3uU-z\",\"loading\":\"TransactionsContainer_loading__2jRLg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"StyledSpan_wrapper__3FqUt\",\"initial\":\"StyledSpan_initial__3wgW4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"topCardGroup\":\"TotalInfoCard_topCardGroup__2J4rC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cardHeader\":\"CardHeader_cardHeader__3xFcI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cardContent\":\"CardContent_cardContent__1xDOt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__jU5gq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"progress\":\"Progress_progress__18QNN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"IconGroup_wrapper__zUyP2\",\"message\":\"IconGroup_message__1llpi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"StyledTable_wrapper__2qLGM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"UserProject_wrapper__3KhTX\"};","import * as axios from 'axios'\r\n\r\nconst instance = axios.create({\r\n  baseURL: './',  \r\n})\r\n\r\nconst API = {  \r\n  getItems() {\r\n    return instance.get(`transactions.json`)\r\n  },\r\n}\r\n\r\nexport default API\r\n","import API from '../../api'\r\n\r\n// ACTION TYPES\r\nconst SET_ITEMS = 'SET_ITEMS'\r\nconst SET_IS_READY = 'SET_IS_READY'\r\n\r\nconst initialState = {\r\n  isReady: false,\r\n  items: null,\r\n}\r\n\r\n// REDUCER\r\nconst transactions = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_ITEMS:\r\n      return {\r\n        ...state,\r\n        items: action.items,\r\n        isReady: true,\r\n      }\r\n    case SET_IS_READY:\r\n      return {\r\n        ...state,\r\n        isReady: action.isReady,\r\n      }      \r\n    default:\r\n      return state\r\n  }\r\n}\r\nexport default transactions\r\n\r\n// ACTION CREATORS\r\nconst setItems = (items) => ({type: SET_ITEMS, items})\r\nconst setIsReady = (isReady) => ({type: SET_IS_READY, isReady})\r\n\r\n// THUNK CREATOR\r\nexport const getItems = () => async (dispatch) => {\r\n  dispatch(setIsReady(false))\r\n  const {data} = await API.getItems()  \r\n    if (!data.error) {\r\n      dispatch(setItems(data))      \r\n    }\r\n  dispatch(setIsReady(true))\r\n}","import { combineReducers } from 'redux'\r\nimport transactions from './transactions'\r\n\r\nexport default combineReducers({\r\n  transactions,\r\n})\r\n","import { createStore, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport rootReducer from './reducers'\r\n\r\nconst store = createStore(rootReducer, applyMiddleware(thunk))\r\n\r\nexport default store\r\n","import React from 'react'\r\nimport style from './CardHeader.module.css'\r\n\r\nconst CardHeader = ({ title, children }) => (\r\n  <div className={`${style.cardHeader} spaceBetween`}>\r\n    <span>{title}</span>\r\n    {children}\r\n  </div>\r\n)\r\n\r\nexport default CardHeader\r\n","import React from 'react'\r\nimport style from './CardContent.module.css'\r\n\r\nconst CardContent = ({ children, flex }) => (\r\n  <div className={`${style.cardContent} ${flex}`}>\r\n    {children}\r\n  </div>\r\n)\r\n\r\nexport default CardContent\r\n","import React from 'react'\r\nimport style from './TotalStatistics.module.css'\r\n\r\nconst TotalStatistics = ({ total, name, color, percentage, icon, ...rest }) => (\r\n  <div>\r\n    <span className={style.total}>{total}</span>\r\n    <div className={`${style.percentage} spaceBetween`}>\r\n      {name && <span>{name}</span>}\r\n      <span className={`${color} ${style.details}`}>\r\n        {\r\n          name && total\r\n            ? `${percentage}% ${icon}`\r\n            : `${icon} ${percentage}%`\r\n        }\r\n      </span>\r\n    </div>\r\n  </div>\r\n)\r\n\r\nexport default TotalStatistics\r\n","import React from 'react'\r\nimport style from './Card.module.css'\r\n\r\nconst Card = ({ children }) => (\r\n  <div className={style.card}>\r\n    {children}\r\n  </div>)\r\n\r\nexport default Card\r\n","import React from 'react'\r\nimport style from './StyledSpan.module.css'\r\n\r\nconst StyledSpan = ({ children, color, cursor }) => (\r\n  <span className={`${color ? color : style.initial} ${cursor && cursor} ${style.wrapper} noWrap`}>\r\n    {children}\r\n  </span>\r\n)\r\n\r\nexport default StyledSpan\r\n","import React from 'react'\r\nimport style from './TotalInfoCard.module.css'\r\nimport CardHeader from '../common/CardHeader/CardHeader'\r\nimport CardContent from '../common/CardContent/CardContent'\r\nimport TotalStatistics from '../common/TotalStatistics/TotalStatistics'\r\nimport Card from '../common/Card/Card'\r\nimport StyledSpan from '../common/StyledSpan/StyledSpan'\r\n\r\nconst TotalInfoCard = ({\r\n  name,\r\n  period,\r\n  total,\r\n  totalName,\r\n  percentage,\r\n  icon,\r\n  color,\r\n}) => (\r\n    <div className={style.wrapper} data-area=\"\">\r\n      <Card>\r\n        <CardHeader title={name}>\r\n          <StyledSpan color={color}>{period}</StyledSpan>\r\n        </CardHeader>\r\n        <CardContent>\r\n          <TotalStatistics total={total} name={totalName} color={color} percentage={percentage} icon={icon} />\r\n        </CardContent>\r\n      </Card>\r\n    </div >\r\n  )\r\n\r\nexport default TotalInfoCard\r\n\r\n","import React, { useState } from 'react'\r\nimport TotalInfoCard from './TotalInfoCard'\r\nimport getIcons from '../../assets/icons'\r\n\r\nconst TotalInfoCardList = () => {\r\n  const { thunder, up, down } = getIcons()\r\n  const [items] = useState([\r\n    {\r\n      name: 'Income',\r\n      period: 'Monthly',\r\n      total: '40 886,200',\r\n      totalName: 'Total incoms',\r\n      percentage: 98,\r\n      icon: thunder,\r\n      color: 'blue',\r\n    },\r\n    {\r\n      name: 'Orders',\r\n      period: 'Annual',\r\n      total: '275,800',\r\n      totalName: 'New orders',\r\n      percentage: 20,\r\n      icon: up,\r\n      color: 'olive',\r\n    },\r\n    {\r\n      name: 'Visits',\r\n      period: 'Today',\r\n      total: '106,120',\r\n      totalName: 'New visits',\r\n      percentage: 44,\r\n      icon: up,\r\n      color: 'green',\r\n    },\r\n    {\r\n      name: 'User activity',\r\n      period: 'Low value',\r\n      total: '80,600',\r\n      totalName: 'In first month',\r\n      percentage: 38,\r\n      icon: down,\r\n      color: 'red',\r\n    },\r\n  ])\r\n  return <>{items.map(item => <TotalInfoCard {...item} />)}</>\r\n}\r\n\r\nexport default TotalInfoCardList\r\n","export default function getIcons () {\r\n  return {\r\n      thunder: '⚡' || '\\u26A1',\r\n      up: '↑' || '\\u2191',\r\n      down: '↓' || '\\u2193',\r\n      close: '✕' || '\\u2715',\r\n      settings: '⚙' || '\\u2699',\r\n      collapse: '∧',\r\n      expand: '∨',\r\n      envelope: '✉',\r\n      clock: '🕘' || '\\u1F558',\r\n      }\r\n    }","import React from 'react'\r\nimport style from './Progress.module.css'\r\n\r\nconst Progress = ({ color, value }) => (\r\n  <progress\r\n    className={`${style.progress} ${color}`}\r\n    max='100'\r\n    value={value}\r\n  />\r\n)\r\n\r\nexport default Progress\r\n","import React from 'react'\r\nimport TotalStatistics from '../../common/TotalStatistics/TotalStatistics'\r\nimport Progress from './Progress/Progress'\r\nimport style from './OrdersBar.module.css'\r\n\r\nconst OrdersBar = ({\r\n  name,\r\n  total,\r\n  percentage,\r\n  icon,\r\n  color,\r\n}) => (\r\n    <div className={style.wrapper}>\r\n      <TotalStatistics total={total} name={name} color={color} percentage={percentage} icon={icon} />\r\n      <Progress color={color} value={percentage} />\r\n    </div>\r\n\r\n  )\r\n\r\nexport default OrdersBar\r\n","import React, { useState } from 'react';\r\nimport style from './OrdersBar.module.css';\r\nimport OrdersBar from './OrdersBar';\r\nimport getIcons from '../../../assets/icons';\r\n\r\nconst OrdersBarList = () => {\r\n  const { thunder, up, down } = getIcons()\r\n  const [items] = useState([\r\n    {\r\n      name: 'Total orders in period',\r\n      total: '2,346',\r\n      percentage: 48,\r\n      icon: up,\r\n      color: 'green',\r\n    },\r\n    {\r\n      name: 'Orders in a last month',\r\n      total: '4,422',\r\n      percentage: 60,\r\n      icon: down,\r\n      color: 'green',\r\n    },\r\n    {\r\n      name: 'Monthly income from orders',\r\n      total: '9,180',\r\n      percentage: 22,\r\n      icon: thunder,\r\n      color: 'green',\r\n    },\r\n  ])\r\n  return (\r\n    <div className={style.ordersBarGroup}>\r\n      {items.map(item => <OrdersBar {...item} />)}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default OrdersBarList\r\n","import React, { useState } from 'react'\r\nimport style from './OrdersInfoCard.module.css'\r\nimport OrdersBarList from './OrdersBar/OrdersBarList'\r\nimport CardHeader from '../common/CardHeader/CardHeader'\r\nimport Card from '../common/Card/Card'\r\nimport CardContent from '../common/CardContent/CardContent'\r\n\r\nconst OrdersInfoCard = () => (\r\n  <div className={style.wrapper}>\r\n    <Card>\r\n      <CardHeader title=\"Orders\">\r\n        <div className={style.buttonsGroup}>\r\n          <button>Today</button>\r\n          <button>Monthly</button>\r\n          <button>Annual</button>\r\n        </div>\r\n      </CardHeader>\r\n      <CardContent flex=\"spaceBetween\">\r\n        <span className={`graph ${style.graph}`}></span>\r\n        <OrdersBarList />\r\n      </CardContent>\r\n    </Card>\r\n  </div>\r\n\r\n\r\n\r\n)\r\n\r\nexport default OrdersInfoCard\r\n","import React from 'react'\r\nimport style from './Messages.module.css'\r\n\r\nconst Message = ({\r\n  author,\r\n  visitDate,\r\n  text,\r\n  messageDate,\r\n  color,\r\n}) => (\r\n    <div className={style.message}>\r\n      <div className=\"spaceBetween\">\r\n        <span className=\"noWrap\">{author}</span>\r\n        <span className={`${color} no-background-color noWrap`}>{visitDate}</span>\r\n      </div>\r\n      <p>\r\n        <span>{text}</span>\r\n      </p>\r\n      <p>\r\n        <span className=\"noWrap\">{messageDate}</span>\r\n      </p>\r\n    </div>\r\n  )\r\n\r\nexport default Message\r\n","import React from 'react'\r\nimport style from './IconGroup.module.css'\r\nimport getIcons from '../../../assets/icons'\r\n\r\nconst IconGroup = () => {\r\n  const { close, settings, collapse } = getIcons()\r\n  return (\r\n    <div className={style.wrapper}>\r\n      <span>{collapse}</span>\r\n      <span>{settings}</span>\r\n      <span>{close}</span>\r\n    </div>\r\n  )\r\n}\r\nexport default IconGroup","import React, { useState } from 'react'\r\nimport style from './Messages.module.css'\r\nimport Card from '../common/Card/Card'\r\nimport CardHeader from '../common/CardHeader/CardHeader'\r\nimport CardContent from '../common/CardContent/CardContent'\r\nimport Message from './/Message'\r\nimport IconGroup from '../common/IconGroup/IconGroup'\r\n\r\nconst MessagesContainer = () => {\r\n  const [messages] = useState([\r\n    {\r\n      author: 'Monica Smith',\r\n      visitDate: '1m ago',\r\n      text: 'Lorem ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum',\r\n      messageDate: 'Today 5:60 pm - 12.06.2014',\r\n      color: 'green',\r\n    },\r\n    {\r\n      author: 'John Angel',\r\n      visitDate: '2m ago',\r\n      text: 'There are many variations of passages of Lorem Ipsum available',\r\n      messageDate: 'Today 2:23 pm - 11.06.2014',\r\n    },\r\n    {\r\n      author: 'Jesica Ocean',\r\n      visitDate: '5m ago',\r\n      text: 'Contrary to popular belief, Lorem Ipsum',\r\n      messageDate: 'Today 1:00 pm - 08.06.2014',\r\n    },\r\n    {\r\n      author: 'Monica Jackson',\r\n      visitDate: '5m ago',\r\n      text: 'The jenerated Lorem Ipsum is therefore',\r\n      messageDate: 'Yesterday 8:48 pm - 10.06.2014',\r\n    },\r\n    {\r\n      author: 'Anna Legend',\r\n      visitDate: '5m ago',\r\n      text: 'All the Lorem Ipsum generators on the Internet tend to repeat',\r\n      messageDate: 'Yesterday 8:48 pm - 10.06.2014',\r\n    },\r\n    {\r\n      author: 'Damian Nowak',\r\n      visitDate: '5m ago',\r\n      text: 'The standard chunk of Lorem Ipsum used',\r\n      messageDate: 'Yesterday 8:48 pm - 10.06.2014',\r\n    },\r\n    {\r\n      author: 'Gary Smith',\r\n      visitDate: '5m ago',\r\n      text: '200 Latin words combined a handful',\r\n      messageDate: 'Yesterday 8:48 pm - 10.06.2014',\r\n    },\r\n  ])\r\n  return (\r\n    <div className={style.wrapper}>\r\n      <Card>\r\n        <CardHeader title=\"Messages\">\r\n          <IconGroup />\r\n        </CardHeader>\r\n        <div className={style.messagesInfo}>\r\n          <span>New messages</span>\r\n          <span>You have 22 new messages and 16 waiting in draft folder</span>\r\n        </div>\r\n        <CardContent>\r\n          <div className={style.messages}>\r\n            {messages.map(message => <Message {...message} />)}\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default MessagesContainer\r\n","import React from 'react'\r\nimport style from './StyledTable.module.css'\r\n\r\nconst StyledTable = ({ children, headers }) => (\r\n  <table className={style.wrapper}>\r\n    <thead>\r\n      <tr>\r\n        {headers.map(header => <th>{header}</th>)}\r\n      </tr>\r\n    </thead>\r\n    {children}\r\n  </table>\r\n)\r\n\r\n\r\nexport default StyledTable\r\n","import React from 'react'\r\nimport StyledSpan from '../common/StyledSpan/StyledSpan'\r\nimport TotalStatistics from '../common/TotalStatistics/TotalStatistics'\r\n\r\nconst UserProject = ({ status, date, user, value, icon, clock }) => (\r\n  <tr>\r\n    <td>\r\n      {status !== 'Pending...'\r\n        ? <StyledSpan\r\n          color={status === 'Completed' ? 'green' : 'orange'}\r\n          cursor=\"cursorUnset\"\r\n        >\r\n          {status}\r\n        </StyledSpan>\r\n        : <StyledSpan cursor=\"cursorUnset\">{status}</StyledSpan>\r\n      }\r\n    </td>\r\n    <td className=\"noWrap\">{`${clock} ${date}`}</td>\r\n    <td>{user}</td>\r\n    <td>\r\n      <TotalStatistics color=\"green\" percentage={value} icon={icon} />\r\n    </td>\r\n  </tr>\r\n)\r\n\r\n\r\nexport default UserProject\r\n\r\n\r\n","import React, { useState } from 'react'\r\nimport Card from '../common/Card/Card'\r\nimport CardHeader from '../common/CardHeader/CardHeader'\r\nimport CardContent from '../common/CardContent/CardContent'\r\nimport IconGroup from '../common/IconGroup/IconGroup'\r\nimport getIcons from '../../assets/icons'\r\nimport StyledTable from '../common/StyledTable/StyledTable'\r\nimport UserProject from './UserProject'\r\nimport style from './UserProject.module.css'\r\n\r\nconst UserProjectList = () => {\r\n  const { up, clock } = getIcons()\r\n  const [userProjectList] = useState([\r\n    {\r\n      status: 'Pending...',\r\n      date: '11:20pm',\r\n      user: 'Samantha',\r\n      value: 24,\r\n      icon: up,\r\n    },\r\n    {\r\n      status: 'Canceled',\r\n      date: '10:40am',\r\n      user: 'Monica',\r\n      value: 66,\r\n      icon: up,\r\n    },\r\n    {\r\n      status: 'Pending...',\r\n      date: '01:30pm',\r\n      user: 'John',\r\n      value: 54,\r\n      icon: up,\r\n    },\r\n    {\r\n      status: 'Pending...',\r\n      date: '02:20pm',\r\n      user: 'Agnes',\r\n      value: 12,\r\n      icon: up,\r\n    },\r\n    {\r\n      status: 'Completed',\r\n      date: '04:10am',\r\n      user: 'Amelia',\r\n      value: 66,\r\n      icon: up,\r\n    },\r\n    {\r\n      status: 'Pending...',\r\n      date: '12:08am',\r\n      user: 'Damlan',\r\n      value: 23,\r\n      icon: up,\r\n    },\r\n  ])\r\n  const tableHeaders = ['Status', 'Data', 'User', 'Value']\r\n  return (\r\n    <div className={style.wrapper}>\r\n      <Card>\r\n        <CardHeader title=\"User project list\">\r\n          <IconGroup />\r\n        </CardHeader>\r\n        <CardContent>\r\n          <StyledTable headers={tableHeaders}>\r\n            <tbody>\r\n              {userProjectList.map(item => <UserProject {...item} clock={clock} />)}\r\n            </tbody>\r\n          </StyledTable>\r\n        </CardContent>\r\n      </Card>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default UserProjectList\r\n","import React from 'react'\r\nimport style from './TodoList.module.css'\r\nimport StyledSpan from '../common/StyledSpan/StyledSpan'\r\nimport getIcons from '../../assets/icons'\r\n\r\nconst Todo = ({\r\n  id,\r\n  todo,\r\n  expires,\r\n}) => {\r\n  const { clock } = getIcons()\r\n  return (\r\n    <div className={`${style.todo} bgGrey `}>\r\n      <input type=\"checkbox\" className={style.checkbox} id={`checkbox${id}`} />\r\n      <label for={`checkbox${id}`}>{todo}</label>\r\n      {expires && <StyledSpan color=\"green\" cursor=\"cursorUnset\">{`${clock}   ${expires}`}</StyledSpan>}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Todo\r\n","import React, { useState } from 'react'\r\nimport Card from '../common/Card/Card'\r\nimport CardHeader from '../common/CardHeader/CardHeader'\r\nimport IconGroup from '../common/IconGroup/IconGroup'\r\nimport CardContent from '../common/CardContent/CardContent'\r\nimport Todo from './Todo'\r\nimport style from './TodoList.module.css'\r\n\r\nconst TodoList = () => {\r\n  const [todos] = useState([\r\n    {\r\n      id: 1,\r\n      todo: 'Buy a milk',\r\n    },\r\n    {\r\n      id: 2,\r\n      todo: 'Go to shop and find some products',\r\n    },\r\n    {\r\n      id: 3,\r\n      todo: 'Send documents to Mike',\r\n      expires: '1 mins',\r\n    },\r\n    {\r\n      id: 4,\r\n      todo: 'Go to the doctor dr Smith',\r\n    },\r\n    {\r\n      id: 5,\r\n      todo: 'Plan vacation',\r\n    },\r\n    {\r\n      id: 6,\r\n      todo: 'Create new staff',\r\n    },\r\n    {\r\n      id: 7,\r\n      todo: 'Call to Anna for Dinner',\r\n    },\r\n  ])\r\n  return (\r\n    <div className={style.wrapper}>\r\n      <Card>\r\n        <CardHeader title=\"Small toto list\" >\r\n          <IconGroup />\r\n        </CardHeader>\r\n        <CardContent>\r\n          {todos.map(todo => <Todo {...todo} />)}\r\n        </CardContent>\r\n      </Card>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TodoList\r\n","import React from 'react'\r\nimport StyledSpan from '../common/StyledSpan/StyledSpan'\r\n\r\nconst Transaction = ({ num, transaction, date, amount }) => (\r\n  <tr>\r\n    <td> {num}</td>\r\n    <td>{transaction}</td>\r\n    <td>{date}</td>\r\n    <td>\r\n      <StyledSpan color={amount === '$125,00' ? 'orange' : 'green'} cursor=\"cursorUnset\">{amount}</StyledSpan>\r\n    </td>\r\n  </tr>\r\n)\r\n\r\nexport default Transaction\r\n\r\n\r\n","import React from 'react'\r\nimport StyledTable from '../common/StyledTable/StyledTable'\r\nimport Transaction from './Transaction'\r\n\r\nconst TransactionsTable = ({ transactions }) => {\r\n  const tableHeaders = ['No.', 'Transaction', 'Date', 'Amount']\r\n  return (\r\n    <StyledTable headers={tableHeaders}>\r\n      <tbody>\r\n        {transactions.map(item => <Transaction {...item} />)}\r\n      </tbody>\r\n    </StyledTable>\r\n  )\r\n}\r\n\r\nexport default TransactionsTable\r\n","import React, { Component } from 'react'\r\nimport * as am4core from \"@amcharts/amcharts4/core\"\r\nimport * as am4maps from \"@amcharts/amcharts4/maps\"\r\nimport am4geodata_worldLow from \"@amcharts/amcharts4-geodata/worldLow\"\r\nimport am4themes_material from \"@amcharts/amcharts4/themes/material\"\r\nimport am4themes_animated from \"@amcharts/amcharts4/themes/animated\"\r\n\r\nam4core.useTheme(am4themes_material)\r\nam4core.useTheme(am4themes_animated)\r\n\r\nclass Map extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      bubble: {}\r\n    }\r\n    this.green = '#1AB394'\r\n    this.grey = '#E6E6E6'\r\n    this.transactions = props.transactions\r\n  }\r\n  componentDidMount() {\r\n    let chart = am4core.create(\"worldmap\", am4maps.MapChart)\r\n\r\n    // add zoom control\r\n    chart.zoomControl = new am4maps.ZoomControl()\r\n\r\n    // Set map definition\r\n    chart.geodata = am4geodata_worldLow\r\n\r\n    // Set projection\r\n    chart.projection = new am4maps.projections.Miller()\r\n\r\n    // Create map polygon series\r\n    let polygonSeries = chart.series.push(new am4maps.MapPolygonSeries())\r\n\r\n    // Exclude Antartica\r\n    polygonSeries.exclude = [\"AQ\"]\r\n\r\n    // Make map load polygon (like country names) data from GeoJSON\r\n    polygonSeries.useGeodata = true\r\n\r\n    // Configure series\r\n    let polygonTemplate = polygonSeries.mapPolygons.template\r\n    polygonTemplate.fill = am4core.color(this.grey)\r\n\r\n    // Costom config for regions\r\n    polygonSeries.data = this.transactions.map(item => ({ ...item, fill: am4core.color(this.green), }))\r\n    polygonTemplate.tooltipText =\r\n      `{name}\r\n    {transaction} {amount}\r\n    {date}`\r\n    polygonTemplate.propertyFields.fill = \"fill\"\r\n\r\n    // Create hover state and set alternative fill color\r\n    let hs = polygonTemplate.states.create(\"hover\")\r\n    hs.properties.fill = am4core.color(\"#1AB394\")\r\n\r\n    // Add image series\r\n    let imageSeries = chart.series.push(new am4maps.MapImageSeries())\r\n    imageSeries.mapImages.template.propertyFields.longitude = \"longitude\"\r\n    imageSeries.mapImages.template.propertyFields.latitude = \"latitude\"\r\n\r\n    // add events to recalculate map position when the map is moved or zoomed\r\n    chart.events.on(\"mappositionchanged\", updateCustomMarkers)\r\n\r\n    // add zoom control\r\n    chart.zoomControl = new am4maps.ZoomControl()\r\n\r\n    // this function will take current images on the map and create HTML elements for them\r\n    function updateCustomMarkers() {\r\n\r\n      // go through all of the images\r\n      imageSeries.mapImages.each(function (image) {\r\n        // check if it has corresponding HTML element\r\n        if (!image.dummyData || !image.dummyData.externalElement) {\r\n          // create onex\r\n          image.dummyData = {\r\n            externalElement: createCustomMarker(image)\r\n          }\r\n        }\r\n\r\n        // reposition the element accoridng to coordinates\r\n        let xy = chart.geoPointToSVG({ longitude: image.longitude, latitude: image.latitude })\r\n        image.dummyData.externalElement.style.top = xy.y + 'px'\r\n        image.dummyData.externalElement.style.left = xy.x + 'px'\r\n      })\r\n    }\r\n\r\n    // this function creates and returns a new marker element\r\n    function createCustomMarker(image) {\r\n      let chart = image.dataItem.component.chart\r\n\r\n      // create holder\r\n      let holder = document.createElement('div')\r\n      holder.className = 'map-marker'\r\n      holder.title = image.dataItem.dataContext.title\r\n      holder.style.position = 'absolute'\r\n\r\n      // maybe add a link to it?\r\n      if (undefined !== image.url) {\r\n        holder.onclick = function () {\r\n          window.location.href = image.url\r\n        }\r\n        holder.className += ' map-clickable'\r\n      }\r\n\r\n      // create dot\r\n      let dot = document.createElement('div')\r\n      dot.className = 'dot'\r\n      holder.appendChild(dot)\r\n\r\n      // create pulse\r\n      let pulse = document.createElement('div')\r\n      pulse.className = 'pulse'\r\n      holder.appendChild(pulse)\r\n\r\n      // append the marker to the map container\r\n      chart.svgContainer.htmlElement.appendChild(holder)\r\n\r\n      return holder\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    if (this.chart) {\r\n      this.chart.dispose()\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div id=\"worldmap\" style={{ width: \"49%\", height: \"inherit\" }}></div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Map","import React, { useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport Card from '../common/Card/Card'\r\nimport CardHeader from '../common/CardHeader/CardHeader'\r\nimport IconGroup from '../common/IconGroup/IconGroup'\r\nimport CardContent from '../common/CardContent/CardContent'\r\nimport TransactionsTable from './TransactionsTable'\r\nimport style from './TransactionsContainer.module.css'\r\nimport { getItems } from '../../redux/reducers/transactions'\r\nimport Map from './Map'\r\n\r\nconst TransactionsContainer = ({ items, isReady, getItems: getTransactions }) => {\r\n\r\n  useEffect(() => {\r\n    if (!items) getTransactions()\r\n  }, [items, getTransactions])\r\n\r\n  return (\r\n    <div className={style.wrapper}>\r\n      <Card>\r\n        <CardHeader title=\"Transactions worldwide\">\r\n          <IconGroup />\r\n        </CardHeader>\r\n        <CardContent flex={isReady && 'spaceBetween'}>\r\n          {isReady\r\n            ? <>\r\n              <div className={style.tableWrapper}>\r\n                <TransactionsTable transactions={items} />\r\n              </div>\r\n              <Map transactions={items} />\r\n            </>\r\n            : <span className={style.loading}>{'Loading...'}</span>\r\n          }\r\n        </CardContent>\r\n      </Card>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = ({ transactions: { items, isReady } }) => ({\r\n  items,\r\n  isReady,\r\n})\r\n\r\nexport default connect(mapStateToProps, { getItems })(TransactionsContainer)\r\n","import React from 'react'\r\nimport style from './App.module.css'\r\nimport TotalInfoCardList from './components/TotalInfoCard/TotalInfoCardList'\r\nimport OrdersInfoCard from './components/OrdersInfoCard/OrdersInfoCard'\r\nimport MessagesContainer from './components/Messages/MessagesContainer'\r\nimport UserProjectList from './components/UserProjectList/UserProjectList'\r\nimport TodoList from './components/TodoList/TodoList'\r\nimport TransactionsContainer from './components/Transactions/TransactionsContainer'\r\nimport getIcons from './assets/icons'\r\n\r\nfunction App() {\r\n  const {settings} = getIcons()\r\n  return (\r\n    <div className={style.App}>\r\n      <TotalInfoCardList />\r\n      <OrdersInfoCard />\r\n      <div className={style.else}>\r\n        <MessagesContainer />\r\n        <UserProjectList />\r\n        <TodoList />\r\n        <TransactionsContainer />\r\n      </div>\r\n      <div className={`${style.settings} green`}>{settings}</div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport { Provider } from 'react-redux'\r\nimport store from './redux/store'\r\nimport App from './App'\r\nimport * as serviceWorker from './serviceWorker'\r\n\r\nReactDOM.render(  \r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>,\r\n  document.getElementById('root')\r\n)\r\n\r\nserviceWorker.unregister()\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Messages_wrapper__swqEL\",\"messages\":\"Messages_messages__2Tkbn\",\"messagesInfo\":\"Messages_messagesInfo__1ifWk\",\"message\":\"Messages_message__3QHxb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"TodoList_wrapper__1JmC0\",\"todo\":\"TodoList_todo__2aE26\",\"checkbox\":\"TodoList_checkbox__3w0Zl\"};"],"sourceRoot":""}